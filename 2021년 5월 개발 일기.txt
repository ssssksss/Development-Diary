2021년 5월 개발 일기

개발공부를 하면서 무엇을 공부하고 무엇을 고민하고 무엇을 배우는 지 
매일매일 적을 것이다. 추가적으로 공부한 시간을 기록하고 커밋을 특정시간에 하는 법을 길들여겠다.
=============================================================

2021년 5월 1일

React 홈페이지의 자습서로 공부 , React 유튜브(생활코딩)으로 공부

공부내용 : React의 컴포넌트, Props , State에 대해 공부중이다.
컴포넌트라는 개념은 간단하게 말하자면 HTML코드를 가지고 있는 덩어리? 정도라고 이해하고
Props는 컴포넌트를 사용하였을때 속성?값에 값을 받아오는 역할을 한다.
ex) <컴포넌트 속성="123"> </컴포터는> 라고 사용이 되면 컴포넌트에서는 
<div> {this.props.속성} </div> 이라고 사용을 할 수 있다.
아직까지 정확한 문법의 이름들은 잘 모르겠지만 어떻게 사용이 되는지 느낌은 알았다.
하지만 컴포넌트의 발전된 State에 대해서는 좀 더 고민을 해야할 것 같다.
컴포넌트를 사용하면 값이 바뀌어도 렌더링이 자동으로 되지 않는다. 하지만 State를 사용하면 렌더링이 자동으로 되는것 같다. 그리고 리액트에서는 사용되지 않는 많은 컴포넌트를 회수하는 것이 중요하다고 말하는것 같다. Render()라는 메소드를 실행할때마다
DOM은 매번 업데이트 하는것 같다.

1. setState()를 이용해서 컴포넌트의 값을 바꾸고 렌더링을 해준다.
1번은 비동기적으로 이루어 질수 있으므로 2와 같이 한다.
2. setState((매개변수)=>({내용}))
setState로 하면 여러개의 매개변수가 동시에 업데이트가 된다. 이럴떄 각각의 변수를
독립적으로 업데이트 하기 위해서는 componentDidMount() { fetch변수().then(response=>{this.setState({ 변수: response.변수 })};)} 와 같이 바꾸고 this.setState({posts}) 와 같이 사용하면 독립적으로 변경 가능하다. 일단은 이런 개념이 있다는 것만 알고 넘기려고 한다.
3. state가 소유한 컴포넌트는 다른 외부 컴포넌트에서 접근이 불가능하다.

콜백함수란?
상태변화가 발생하였을 때 함수를 통해 전단하는 데 이 함수를 콜백함수라 한다.
ajax에서는 성공하면 success함수, 실패하면 error함수, 완료되면 complete함수가 실행

클로져?
클로져 = 함수 + 함수를 이루는 환경, 
https://beomy.tistory.com/8

콜백지옥이라는 말은 비동기로 프로그래밍을 짤때 발생하는것을 알았다. 
React자습서를 보고 읽고 있지만 이해가 되지 않는 부분이 많아 유튜브를 공부하면서 직접 실행시켜보아야 겠다. 무엇을 건드려 놓아서 작동이 되지 않아 처음부터 다시 시작하기로 하였다....................

css스타일 적용과 component의 사용법까지는 터득, 그리고 지금까지 한것을 github에 푸쉬를 했는데 변한게 없다.. 파일은 올라갔는데 실행시켜보면 예전에 했던 코드이다.
무엇이 문제인지 찾기 시작했다. 어떻게 올리기는 하였는데 무엇이 문제인지 놓쳐버렸다. 다음번에 다시 찾아봐야겠다. gh-pages build와 관련이 있는것 같기는 한데 어느 부분에서 올라가 있었다.

원래 내일에 IT_Korea 팀프로젝트를 하려고 했는데 질문이 들어와 오늘 처리하게 되었다.
최근에 sql문을 건드리지 않고 하니 헷갈려서 머뭇거리게 되었지만 6시간 정도해서 어느정도 결과물은 얻어내었다. 새벽에 좀더 수정하고 로그인/회원가입을 구현해놓고 내일 팀원들과 어느정도 다들 하였는지 진척도를 봐야겠다.

2021년 5월 2일

React로 실습을 해보려 하는데 약간 더 공부가 필요한것 같다. 어떤 방식으로 사용이 되는지 감은 잡아서 금방 실습이 가능해질것 같다. 오늘 팀원들끼리 프로젝트 중간회의를 하여 잠시 리액트 공부를 중단하고 프로젝트 코드를 짜는데 어제 새벽에 잠깐 건드리고 오늘 보니 문제가 생겼다. 뭐 때문인지 문제를 찾아보았는데 문제가 터진 부분이 어디인지는 알았지만
왜 문제가 생겼는지 이해가 안되서 고민하다 깊은복사와 얕은복사의 개념처럼 객체가 계속 존재하여 전체 재고 수량이 현재 장바구니의 수량으로 바뀌는 문제가 생겼다. 일단 해결을 해놓았고 그다음 수정할 부분은 상품을 구매를 할 때 실제 재고가 구매수량보다 적지는 않은지를 확인하는 것인데 remove() 메소드를 사용하니 index관련 에러가 발생한것 같다.
해결책은 이미 예상은 하고 있었는데 역시 for문에서 지울 인덱스를 기억하고 for문 밖에서 처리하는 것인데... 번거롭다.. 하지만 공부 중이니 이 방법으로 작성할 생각이다.

2021년 5월 3일

새벽에 팀원들이 한 카톡의 결과물들을 보았다. 잘 작동이 되는것 같았지만..
합치는게 일이라고 생각이 들었다. 특히 DTO,DAO를 사용한 나는... 코드를 바꿔야할 예감이 든다. 애초애 모든것을 어느정도 정하고 했어야 했는데.. 좀 있다가 합쳐보면 무슨 결과물이 나올지 알 수 있을것 같다. 오늘은 Figma로 어느정도 틀을 잡고 리액트로 블로그를 제작해볼 생각이다. 오늘은 메뉴창 버튼을 누르면 왼쪽에 메뉴창이 1/4정도의 창이 튀어 나오게 만들어 볼 생각이다. 레이아웃을 잡는것을 몇번 해봐서 쉬울줄 알았는데 다시 해보니 어렵다.. 그래도 오늘 메뉴버튼의 위치를 잡을 것이다!!